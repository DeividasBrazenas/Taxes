// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taxes.Service.DataLayer;

namespace Taxes.Service.Migrations
{
    [DbContext(typeof(TaxesContext))]
    [Migration("20190530200902_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Taxes.Service.DataLayer.Models.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("Taxes.Service.DataLayer.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Frequency");

                    b.Property<int?>("MunicipalityId");

                    b.Property<DateTime>("StartDate");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("Taxes.Service.DataLayer.Models.Tax", b =>
                {
                    b.HasOne("Taxes.Service.DataLayer.Models.Municipality", "Municipality")
                        .WithMany("Taxes")
                        .HasForeignKey("MunicipalityId");
                });
#pragma warning restore 612, 618
        }
    }
}
